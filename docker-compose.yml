version: '3'
services:
  zookeeper-server:
    image: wurstmeister/zookeeper
    restart: always
  kafka-server:
    image: wurstmeister/kafka
    restart: always
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-server
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
  jaeger-server:
    image: jaegertracing/all-in-one
    restart: always
    ports:
      - 16686:16686
  admin-server:
    image: training/admin-server
    restart: always
    environment:
      - PORT=8080
    ports:
      - 8090:8080
  configuration-server:
    image: training/configuration-server
    restart: always
    environment:
      - GIT_URI=https://github.com/landrzejewski/spring-cloud-training
      - KAFKA_BROKER=kafka-server
    ports:
      - 8888:8888
  discovery-server:
    image: training/discovery-server
    restart: always
    environment:
      - ACTIVE_PROFILE=production
      - CONFIGURATION_SERVER=optional:configserver:http://configuration-server:8888
    ports:
      - 8761:8761
  gateway-server:
    image: training/gateway-server
    restart: always
    environment:
      - ACTIVE_PROFILE=production
      - CONFIGURATION_SERVER=optional:configserver:http://configuration-server:8888
    ports:
      - 8080:8080
  payments-broker:
    image: training/payments-broker
    restart: always
    environment:
      - ACTIVE_PROFILE=production
      - CONFIGURATION_SERVER=optional:configserver:http://configuration-server:8888
  payments-database:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=payments
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - PGDATA=/data
    volumes:
      - ./data/paymnets:/data
  payments-service:
    image: training/payments-service
    restart: always
    environment:
      - ACTIVE_PROFILE=production
      - CONFIGURATION_SERVER=optional:configserver:http://configuration-server:8888
  shop-service:
    image: training/shop-service
    restart: always
    environment:
      - ACTIVE_PROFILE=production
      - CONFIGURATION_SERVER=optional:configserver:http://configuration-server:8888
  alertmanager-server:
    image: prom/alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - ./configuration-files/alertmanager.yml:/etc/prometheus/alertmanager.yml
  prometheus-server:
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./configuration-files/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./configuration-files/rules.yml:/etc/prometheus/rules.yml
  grafana-server:
    image: grafana/grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./configuration-files/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
  portainer:
    image: portainer/portainer-ce
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
